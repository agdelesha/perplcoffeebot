from aiogram.utils.exceptions import MessageNotModified
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
import asyncio
import logging
from aiogram.dispatcher.filters.state import State, StatesGroup

from bot.config.config import API_TOKEN
from bot.database.db import init_db, clear_old_requests
from bot.handlers.bonus import (
    show_location_choice, request_bonus_krasnoarmeyskaya,
    request_bonus_gorohovaya, process_one_bonus, process_two_bonus,
    process_three_bonus, process_four_bonus, process_five_bonus,
    process_six_bonus, process_bonus_rejection, BonusConfirmation,
    check_balance, exchange_bonus,
    process_exchange_confirmation, process_exchange_rejection,
    process_exchange_krasnoarmeyskaya, process_exchange_gorohovaya,
)
from bot.handlers.menu import send_menu
from bot.handlers.info import cmd_start, about_coffee_shop
from bot.handlers.admin import (
    admin_command, 
    process_admin_user, 
    process_admin_id,
    process_manual_bonus, 
    process_bonus_user_id, 
    process_bonus_amount,
    process_send_message, 
    process_message_user_id, 
    process_message_text,
    AdminStates, 
    return_to_main_menu, 
    cancel_admin_action
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

async def cancel_action(callback_query: types.CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è"""
    await state.finish()
    await callback_query.message.edit_text("‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
    await callback_query.answer()

def register_handlers(dp: Dispatcher):
    # –ö–æ–º–∞–Ω–¥—ã
    dp.register_message_handler(cmd_start, commands=['start'])
    dp.register_message_handler(admin_command, commands=['admin'])
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
    dp.register_message_handler(show_location_choice, lambda msg: msg.text == "üí∞ –ù–∞—á–∏—Å–ª–∏—Ç—å –±–æ–Ω—É—Å—ã")
    dp.register_message_handler(about_coffee_shop, lambda msg: msg.text == "üè† –û –∫–æ—Ñ–µ–π–Ω–µ")
    dp.register_message_handler(send_menu, lambda msg: msg.text == "üìã –ú–µ–Ω—é")
    dp.register_message_handler(check_balance, lambda msg: msg.text == "üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å")
    dp.register_message_handler(exchange_bonus, lambda msg: msg.text == "‚òï –û–±–º–µ–Ω—è—Ç—å –±–æ–Ω—É—Å—ã –Ω–∞ –Ω–∞–ø–∏—Ç–æ–∫")
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ª–æ–∫–∞—Ü–∏–π –¥–ª—è –±–æ–Ω—É—Å–æ–≤
    dp.register_callback_query_handler(
        request_bonus_krasnoarmeyskaya,
        lambda c: c.data == "loc_kr"
    )
    dp.register_callback_query_handler(
        request_bonus_gorohovaya,
        lambda c: c.data == "loc_gr"
    )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ª–æ–∫–∞—Ü–∏–π –¥–ª—è –æ–±–º–µ–Ω–∞ –±–æ–Ω—É—Å–æ–≤
    dp.register_callback_query_handler(
        process_exchange_krasnoarmeyskaya,
        lambda c: c.data == "ex_loc_kr"
    )
    dp.register_callback_query_handler(
        process_exchange_gorohovaya,
        lambda c: c.data == "ex_loc_gr"
    )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±–æ–Ω—É—Å–æ–≤
    dp.register_callback_query_handler(
        process_one_bonus,
        lambda c: c.data and c.data.startswith('b1_')
    )
    dp.register_callback_query_handler(
        process_two_bonus,
        lambda c: c.data and c.data.startswith('b2_')
    )
    dp.register_callback_query_handler(
        process_three_bonus,
        lambda c: c.data and c.data.startswith('b3_')
    )
    dp.register_callback_query_handler(
        process_four_bonus,
        lambda c: c.data and c.data.startswith('b4_')
    )
    dp.register_callback_query_handler(
        process_five_bonus,
        lambda c: c.data and c.data.startswith('b5_')
    )
    dp.register_callback_query_handler(
        process_six_bonus,
        lambda c: c.data and c.data.startswith('b6_')
    )
    dp.register_callback_query_handler(
        process_bonus_rejection,
        lambda c: c.data and c.data.startswith('br_')
    )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ–±–º–µ–Ω–∞ –±–æ–Ω—É—Å–æ–≤
    dp.register_callback_query_handler(
        process_exchange_confirmation,
        lambda c: c.data and c.data.startswith('ex_ok_')
    )
    dp.register_callback_query_handler(
        process_exchange_rejection,
        lambda c: c.data and c.data.startswith('ex_no_')
    )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–æ–Ω—É—Å–æ–≤
    dp.register_message_handler(
        process_bonus_amount,
        state=BonusConfirmation.waiting_for_amount
    )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã
    dp.register_callback_query_handler(
        cancel_action,
        lambda c: c.data == "cancel",
        state="*"
    )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
    dp.register_message_handler(
        cancel_admin_action,
        lambda msg: msg.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
        state=[
            AdminStates.waiting_for_admin_id,
            AdminStates.waiting_for_bonus_user_id,
            AdminStates.waiting_for_bonus_amount,
            AdminStates.waiting_for_message_user_id,
            AdminStates.waiting_for_message_text
        ]
    )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    dp.register_message_handler(
        process_admin_user,
        lambda msg: msg.text == "üëë –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏"
    )
    dp.register_message_handler(
        process_manual_bonus,
        lambda msg: msg.text == "üí´ –ë–æ–Ω—É—Å—ã –≤—Ä—É—á–Ω—É—é"
    )
    dp.register_message_handler(
        process_send_message,
        lambda msg: msg.text == "‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"
    )
    dp.register_message_handler(
        return_to_main_menu,
        lambda msg: msg.text == "‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –æ–±—ã—á–Ω–æ–µ –º–µ–Ω—é"
    )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    dp.register_message_handler(
        process_admin_id,
        state=AdminStates.waiting_for_admin_id
    )
    dp.register_message_handler(
        process_bonus_user_id,
        state=AdminStates.waiting_for_bonus_user_id
    )
    dp.register_message_handler(
        process_bonus_amount,
        state=AdminStates.waiting_for_bonus_amount
    )
    dp.register_message_handler(
        process_message_user_id,
        state=AdminStates.waiting_for_message_user_id
    )
    dp.register_message_handler(
        process_message_text,
        state=AdminStates.waiting_for_message_text
    )

register_handlers(dp)

async def on_startup(dp):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    init_db()
    
    # –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    asyncio.create_task(periodic_cleanup())

async def periodic_cleanup():
    while True:
        clear_old_requests()
        await asyncio.sleep(24 * 60 * 60)  # –û—á–∏—Å—Ç–∫–∞ —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏

if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True, on_startup=on_startup)
